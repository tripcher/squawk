name: Python

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PACKAGE_NAME: squawk_cli
  PYTHON_VERSION: "3.7" # to build abi3 wheels

jobs:
  maturin-build:
    name: "maturin build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Install Rust toolchain"
        run: rustup show
      - uses: Swatinem/rust-cache@v1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: pip install maturin
      - run: maturin build -b bin

  macos-x86_64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: "Build wheels - x86_64"
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist
      - name: "Install built wheel - x86_64"
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
      - name: "Upload wheels"
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos-universal:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          default: true
          override: true
      - name: "Build wheels - universal2"
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist
      - name: "Install built wheel - universal2"
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*universal2.whl --force-reinstall
      - name: "Upload wheels"
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          default: true
          override: true
      - name: "Build wheels"
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
      - name: "Install built wheel"
        if: matrix.target == 'x86_64'
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
      - name: "Upload wheels"
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
